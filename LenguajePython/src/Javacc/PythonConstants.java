/* Generated By:JavaCC: Do not edit this line. PythonConstants.java */
package javacc;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PythonConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int FALSE = 1;
  /** RegularExpression Id. */
  int TRUE = 2;
  /** RegularExpression Id. */
  int NONE = 3;
  /** RegularExpression Id. */
  int AND = 4;
  /** RegularExpression Id. */
  int AS = 5;
  /** RegularExpression Id. */
  int ASSERT = 6;
  /** RegularExpression Id. */
  int BREAK = 7;
  /** RegularExpression Id. */
  int CLASS = 8;
  /** RegularExpression Id. */
  int CONTINUE = 9;
  /** RegularExpression Id. */
  int DEF = 10;
  /** RegularExpression Id. */
  int DEL = 11;
  /** RegularExpression Id. */
  int ELIF = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int EXCEPT = 14;
  /** RegularExpression Id. */
  int FINALLY = 15;
  /** RegularExpression Id. */
  int FOR = 16;
  /** RegularExpression Id. */
  int FROM = 17;
  /** RegularExpression Id. */
  int GLOBAL = 18;
  /** RegularExpression Id. */
  int IF = 19;
  /** RegularExpression Id. */
  int IMPORT = 20;
  /** RegularExpression Id. */
  int IN = 21;
  /** RegularExpression Id. */
  int IS = 22;
  /** RegularExpression Id. */
  int LAMBDA = 23;
  /** RegularExpression Id. */
  int NONLOCAL = 24;
  /** RegularExpression Id. */
  int NOT = 25;
  /** RegularExpression Id. */
  int OR = 26;
  /** RegularExpression Id. */
  int PASS = 27;
  /** RegularExpression Id. */
  int RAISE = 28;
  /** RegularExpression Id. */
  int RETURN = 29;
  /** RegularExpression Id. */
  int TRY = 30;
  /** RegularExpression Id. */
  int WHILE = 31;
  /** RegularExpression Id. */
  int WITH = 32;
  /** RegularExpression Id. */
  int YIELD = 33;
  /** RegularExpression Id. */
  int RANGE = 34;
  /** RegularExpression Id. */
  int INPUT = 35;
  /** RegularExpression Id. */
  int PRINT = 36;
  /** RegularExpression Id. */
  int VERROR = 37;
  /** RegularExpression Id. */
  int START = 38;
  /** RegularExpression Id. */
  int END = 39;
  /** RegularExpression Id. */
  int SUMA = 40;
  /** RegularExpression Id. */
  int RESTA = 41;
  /** RegularExpression Id. */
  int MULTI = 42;
  /** RegularExpression Id. */
  int POTENCIA = 43;
  /** RegularExpression Id. */
  int DIVISION = 44;
  /** RegularExpression Id. */
  int DIVENTERA = 45;
  /** RegularExpression Id. */
  int MODULO = 46;
  /** RegularExpression Id. */
  int RECIZQUIERDA = 47;
  /** RegularExpression Id. */
  int RECDERECHA = 48;
  /** RegularExpression Id. */
  int AMPERSON = 49;
  /** RegularExpression Id. */
  int PIPE = 50;
  /** RegularExpression Id. */
  int CONJUNTO = 51;
  /** RegularExpression Id. */
  int OPNOT = 52;
  /** RegularExpression Id. */
  int MENORQUE = 53;
  /** RegularExpression Id. */
  int MAYORQUE = 54;
  /** RegularExpression Id. */
  int MENORIGUAL = 55;
  /** RegularExpression Id. */
  int MAYORIGUAL = 56;
  /** RegularExpression Id. */
  int IGUALIGUAL = 57;
  /** RegularExpression Id. */
  int NOTNEG = 58;
  /** RegularExpression Id. */
  int PARENI = 59;
  /** RegularExpression Id. */
  int PAREND = 60;
  /** RegularExpression Id. */
  int PUNTO = 61;
  /** RegularExpression Id. */
  int CORCHI = 62;
  /** RegularExpression Id. */
  int CORCHD = 63;
  /** RegularExpression Id. */
  int LLAVEI = 64;
  /** RegularExpression Id. */
  int LLAVED = 65;
  /** RegularExpression Id. */
  int COMA = 66;
  /** RegularExpression Id. */
  int DOSPUNTOS = 67;
  /** RegularExpression Id. */
  int PUNTOCOMA = 68;
  /** RegularExpression Id. */
  int IGUAL = 69;
  /** RegularExpression Id. */
  int FLECHITA = 70;
  /** RegularExpression Id. */
  int MASIGUAL = 71;
  /** RegularExpression Id. */
  int MENOSIGUAL = 72;
  /** RegularExpression Id. */
  int DIVIGUAL = 73;
  /** RegularExpression Id. */
  int MULTIGUAL = 74;
  /** RegularExpression Id. */
  int DDIGUAL = 75;
  /** RegularExpression Id. */
  int RESIGUAL = 76;
  /** RegularExpression Id. */
  int ARROBAIGUAL = 77;
  /** RegularExpression Id. */
  int AMPIGUAL = 78;
  /** RegularExpression Id. */
  int ORIGUAL = 79;
  /** RegularExpression Id. */
  int EXIGUAL = 80;
  /** RegularExpression Id. */
  int MDMDIGUAL = 81;
  /** RegularExpression Id. */
  int MIMIIGUAL = 82;
  /** RegularExpression Id. */
  int ASASIGUAL = 83;
  /** RegularExpression Id. */
  int PESOS = 84;
  /** RegularExpression Id. */
  int SIGNOINT = 85;
  /** RegularExpression Id. */
  int ACENTOINV = 86;
  /** RegularExpression Id. */
  int ENTERO = 87;
  /** RegularExpression Id. */
  int FLOTANTE = 88;
  /** RegularExpression Id. */
  int CADENA = 89;
  /** RegularExpression Id. */
  int CARACTER = 90;
  /** RegularExpression Id. */
  int BOLEANO = 91;
  /** RegularExpression Id. */
  int NAMEERROR = 92;
  /** RegularExpression Id. */
  int SYNTAXERROR = 93;
  /** RegularExpression Id. */
  int ZERODIVISIONERROR = 94;
  /** RegularExpression Id. */
  int TYPEERROR = 95;
  /** RegularExpression Id. */
  int COMILLAS = 96;
  /** RegularExpression Id. */
  int COMENTARIO = 97;
  /** RegularExpression Id. */
  int DIGITOS = 98;
  /** RegularExpression Id. */
  int IDENTIFICADOR2 = 99;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"False\"",
    "\"True\"",
    "\"None\"",
    "\"and\"",
    "\"as\"",
    "\"assert\"",
    "\"break\"",
    "\"class\"",
    "\"continue\"",
    "\"def\"",
    "\"del\"",
    "\"elif\"",
    "\"else\"",
    "\"except\"",
    "\"finally\"",
    "\"for\"",
    "\"from\"",
    "\"global\"",
    "\"if\"",
    "\"import\"",
    "\"in\"",
    "\"is\"",
    "\"lambda\"",
    "\"nonlocal\"",
    "\"not\"",
    "\"or\"",
    "\"pass\"",
    "\"raise\"",
    "\"return\"",
    "\"try\"",
    "\"while\"",
    "\"with\"",
    "\"yield\"",
    "\"range\"",
    "\"input\"",
    "\"print\"",
    "\"error\"",
    "\"Start\"",
    "\"End\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"**\"",
    "\"/\"",
    "\"//\"",
    "\"%\"",
    "\"<<\"",
    "\">>\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"~\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"(\"",
    "\")\"",
    "\".\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\":\"",
    "\";\"",
    "\"=\"",
    "\"->\"",
    "\"+=\"",
    "\"-=\"",
    "\"/=\"",
    "\"*=\"",
    "\"//=\"",
    "\"%=\"",
    "\"@=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\">>=\"",
    "\"<<=\"",
    "\"**=\"",
    "\"$\"",
    "\"?\"",
    "\"`\"",
    "\"int\"",
    "\"float\"",
    "\"str\"",
    "\"chr\"",
    "\"bool\"",
    "\"NameError\"",
    "\"SyntaxError\"",
    "\"ZeroDivisionError\"",
    "\"TypeError\"",
    "<COMILLAS>",
    "\"#\"",
    "<DIGITOS>",
    "<IDENTIFICADOR2>",
    "\"\\r\"",
    "\"\\b\"",
    "\"\\f\"",
    "\"\\t\"",
    "\"\\n\"",
    "\" \"",
  };

}
